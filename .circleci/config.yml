version: 2.1
orbs:
  python: circleci/python@2
jobs:
  test-python:
    docker:
      - image: cimg/python:3.9
    steps:
      - checkout  # Récupérer le code source

      - run:
          name: Installer les dépendances avec pip
          command: pip install -r requirements.txt  # Installer les dépendances définies dans requirements.txt

      - run:
          name: Exécuter les tests avec pytest
          command: python -m pytest test_unnitest.py --junitxml=junit.xml  # Exécuter les tests unitaires avec pytest

      - store_test_results:
          path: junit.xml  # Stocker les résultats des tests

  trigger-cloudbuild:
    docker:
      - image: google/cloud-sdk:latest  # Image avec gcloud
    environment:
      CLOUDSDK_CORE_PROJECT: velib-forecasting  # Définir le projet Google Cloud
      GOOGLE_APPLICATION_CREDENTIALS: velib-forecasting-auth.json
    steps:
      - checkout  # Récupérer le code source

      - run:
          name: Authentification Google Cloud
          command: gcloud auth activate-service-account --key-file $GOOGLE_APPLICATION_CREDENTIALS  # Authentification

      - run:
          name: Déclencher le Build Cloud Build
          command: gcloud builds triggers run bf9e3d60-bed9-4322-a21a-ea854bd5cba8  --config=./cloudbuild.yaml # Déclencher le build via un trigger spécifique
          environment:
            CLOUDSDK_COMPUTE_REGION: europe-west1  # Spécifiez la région Cloud Build

workflows:
  ci-cd:
    jobs:
      - test-python
      - trigger-cloudbuild:
          requires: [test-python]  # Exécution après le succès des tests
